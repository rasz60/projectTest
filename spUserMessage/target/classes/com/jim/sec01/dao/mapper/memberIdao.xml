<?xml version="1.0" encoding="UTF-8"?>
<!-- mapper문서형식 지정 -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- root element는 mapper -->
<!-- 속성 namepsace는 인터페이스의 경로 및 인터페이스명 -->
<mapper namespace = "com.jim.sec01.dao.MemberIdao">
	<insert id="join" parameterType="com.jim.sec01.dto.JoinDto">
		insert into userdb (pid,ppw,paddress,phobby,pprofile) values (#{pid}, #{ppw}, #{paddress}, #{phobby}, #{pprofile})
	</insert>
	<!-- 로그인 처리 -->
	<select id="login" parameterType="String" resultType="com.jim.sec01.dto.JoinDto">
		select * from userdb where pid = #{pid}
	</select>
	
	<!-- ========================= 메세지 ======================= -->

	<!-- 메세지 리스트 가져오기 -->
	<select id="message_list" parameterType="com.jim.sec01.dto.MessageTO" resultType="com.jim.sec01.dto.MessageTO">
    	select no, room, send_nick, recv_nick, send_time, read_time, content, read_chk 
    	from message 
    	where no in (select max(no) from message group by room) and (send_nick = #{nick} or recv_nick=#{nick}) 
    	order by no desc
	</select>

	<!-- 메세지 list에서 상대방 profile 가져오기 -->
	<select id="get_other_profile" parameterType="com.jim.sec01.dto.MessageTO" resultType="String">
    	select profile from userdb
    	<choose>
        	<when test="send_nick == nick">
            	where nick = #{recv_nick}
        	</when>
        	<otherwise>
            	where nick = #{send_nick}
        	</otherwise>
    	</choose>
	</select>

	<!-- 안읽은 메세지 갯수 가져오기 -->
	<select id="count_unread" parameterType="com.jim.sec01.dto.MessageTO" resultType="Int">
    	select count(no) from message 
    	where recv_nick=#{nick} and read_chk=0 and room=#{room}
	</select>

	<!-- 메세지 내용 가져오기 -->
	<select id="room_content_list" parameterType="com.jim.sec01.dto.MessageTO" resultType="com.jim.sec01.dto.MessageTO">
    	select m.no, m.room, m.send_nick, m.recv_nick, m.send_time, m.read_time, m.content, m.read_chk, u.pprofile, u.pid 
    	from message m left outer join userdb u 
    	on m.send_nick = u.pid <!-- select에 u.pid추가함(message_content_list.jsp) -->
    	<choose>
        	<when test="room != 0">
            	where room=#{room}
        	</when>
        	<otherwise>
            	where (recv_nick = #{recv_nick} and send_nick = #{nick}) or (send_nick = #{recv_nick} and recv_nick = #{nick})
        	</otherwise>
    	</choose> <!-- where 부분 다시 봐, join을 쓴 이유는? -->

	</select>

	<!-- 메세지 읽음 처리 -->
	<update id="message_read_chk" parameterType="com.jim.sec01.dto.MessageTO">
    	update message set read_chk=1
    	<choose>
        	<when test="room != 0">
            	where room=#{room} and read_chk=0 and recv_nick=#{nick}
        	</when>
        	<otherwise>
            	where send_nick=#{recv_nick} and read_chk=0 and recv_nick=#{nick}
        	</otherwise>
    	</choose> <!-- where 부분 다시 봐 -->

	</update>

	<!-- 메세지리스트에서 메세지 보내기 -->
	<insert id="messageSendInlist" parameterType="com.jim.sec01.dto.MessageTO">
    	<choose>
        	<when test="room != 0">
            	insert into message values(message_seq.nextval, #{room}, #{send_nick}, #{recv_nick}, sysdate, sysdate, #{content}, 0);
        	</when>
        	<otherwise>
            	insert into message values(message_seq.nextval, #{room}, #{send_nick}, #{recv_nick}, sysdate, sysdate, #{content}, 0);
        	</otherwise> <!-- 굳이 test를 준 이유는? -->
    	</choose>
	</insert>

	<!-- room 번호 최댓값 구하기 -->
	<select id="max_room"  parameterType="com.jim.sec01.dto.MessageTO" resultType="Int">
    	select max(room) from message
	</select>

	<!-- 메세지 이력이 있는지 검색 -->
	<select id="exist_chat" parameterType="com.jim.sec01.dto.MessageTO" resultType="Int">
    	select count(no) from message 
    	where (recv_nick = #{recv_nick} and send_nick=#{send_nick}) or (send_nick = #{recv_nick} and recv_nick=#{send_nick})
	</select> <!-- where부분 다시 봐 -->

	<!-- 기존 메세지 내역의 room 번호를 가져옴 -->
	<select id="select_room"  parameterType="com.jim.sec01.dto.MessageTO" resultType="Int"> <!-- 왜 String으로 했지? -->
    	select room from message 
    	where (recv_nick = #{recv_nick} and send_nick=#{send_nick}) or (send_nick = #{recv_nick} and recv_nick=#{send_nick}) 
    	rownum = 1
	</select> <!-- where부분 다시 봐 -->
	
</mapper>